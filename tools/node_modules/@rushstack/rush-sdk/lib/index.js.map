{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport {\n  JsonFile,\n  JsonObject,\n  Import,\n  IPackageJson,\n  PackageJsonLookup,\n  Executable,\n  FileSystem,\n  Terminal,\n  ConsoleTerminalProvider\n} from '@rushstack/node-core-library';\nimport type { SpawnSyncReturns } from 'child_process';\n\nconst RUSH_LIB_NAME: string = '@microsoft/rush-lib';\n\nconst verboseEnabled: boolean = typeof process !== 'undefined' && process.env.RUSH_SDK_DEBUG === '1';\nconst terminal: Terminal = new Terminal(\n  new ConsoleTerminalProvider({\n    verboseEnabled\n  })\n);\n\ntype RushLibModuleType = Record<string, unknown>;\ndeclare const global: NodeJS.Global &\n  typeof globalThis & {\n    ___rush___rushLibModule?: RushLibModuleType;\n    ___rush___rushLibModuleFromInstallAndRunRush?: RushLibModuleType;\n  };\n\nfunction _require<TResult>(moduleName: string): TResult {\n  if (typeof __non_webpack_require__ === 'function') {\n    // If this library has been bundled with Webpack, we need to call the real `require` function\n    // that doesn't get turned into a `__webpack_require__` statement.\n    // `__non_webpack_require__` is a Webpack macro that gets turned into a `require` statement\n    // during bundling.\n    return __non_webpack_require__(moduleName);\n  } else {\n    return require(moduleName);\n  }\n}\n\n// SCENARIO 1:  Rush's PluginManager has initialized \"rush-sdk\" with Rush's own instance of rush-lib.\n// The Rush host process will assign \"global.___rush___rushLibModule\" before loading the plugin.\nlet rushLibModule: RushLibModuleType | undefined =\n  global.___rush___rushLibModule || global.___rush___rushLibModuleFromInstallAndRunRush;\nlet errorMessage: string = '';\n\n// SCENARIO 2:  The project importing \"rush-sdk\" has installed its own instance of \"rush-lib\"\n// as a package.json dependency.  For example, this is used by the Jest tests for Rush plugins.\nif (rushLibModule === undefined) {\n  const importingPath: string | null | undefined = module?.parent?.filename;\n  if (importingPath) {\n    const callerPackageFolder: string | undefined =\n      PackageJsonLookup.instance.tryGetPackageFolderFor(importingPath);\n\n    if (callerPackageFolder !== undefined) {\n      const callerPackageJson: IPackageJson = _require(path.join(callerPackageFolder, 'package.json'));\n\n      // Does the caller properly declare a dependency on rush-lib?\n      if (\n        (callerPackageJson.dependencies && callerPackageJson.dependencies[RUSH_LIB_NAME] !== undefined) ||\n        (callerPackageJson.devDependencies &&\n          callerPackageJson.devDependencies[RUSH_LIB_NAME] !== undefined) ||\n        (callerPackageJson.peerDependencies &&\n          callerPackageJson.peerDependencies[RUSH_LIB_NAME] !== undefined)\n      ) {\n        // Try to resolve rush-lib from the caller's folder\n        terminal.writeVerboseLine(`Try to load ${RUSH_LIB_NAME} from caller package`);\n        try {\n          rushLibModule = requireRushLibUnderFolderPath(callerPackageFolder);\n        } catch (error) {\n          // If we fail to resolve it, ignore the error\n          terminal.writeVerboseLine(`Failed to load ${RUSH_LIB_NAME} from caller package`);\n        }\n\n        // If two different libraries invoke `rush-sdk`, and one of them provides \"rush-lib\"\n        // then the first version to be loaded wins.  We do not support side-by-side instances of \"rush-lib\".\n        if (rushLibModule !== undefined) {\n          // to track which scenario is active and how it got initialized.\n          global.___rush___rushLibModule = rushLibModule;\n          terminal.writeVerboseLine(`Loaded ${RUSH_LIB_NAME} from caller`);\n        }\n      }\n    }\n  }\n}\n\n// SCENARIO 3:  A tool or script depends on \"rush-sdk\", and is meant to be used inside a monorepo folder.\n// In this case, we can use install-run-rush.js to obtain the appropriate rush-lib version for the monorepo.\nif (rushLibModule === undefined) {\n  try {\n    const rushJsonPath: string | undefined = tryFindRushJsonLocation(process.cwd());\n    if (!rushJsonPath) {\n      throw new Error(\n        'Unable to find rush.json in the current folder or its parent folders.\\n' +\n          'This tool is meant to be invoked from a working directory inside a Rush repository.'\n      );\n    }\n    const monorepoRoot: string = path.dirname(rushJsonPath);\n\n    const rushJson: JsonObject = JsonFile.load(rushJsonPath);\n    const { rushVersion } = rushJson;\n\n    const installRunNodeModuleFolder: string = path.join(\n      monorepoRoot,\n      `common/temp/install-run/@microsoft+rush@${rushVersion}`\n    );\n\n    try {\n      // First, try to load the version of \"rush-lib\" that was installed by install-run-rush.js\n      terminal.writeVerboseLine(`Trying to load  ${RUSH_LIB_NAME} installed by install-run-rush`);\n      rushLibModule = requireRushLibUnderFolderPath(installRunNodeModuleFolder);\n    } catch (e) {\n      let installAndRunRushStderrContent: string = '';\n      try {\n        const installAndRunRushJSPath: string = path.join(monorepoRoot, 'common/scripts/install-run-rush.js');\n\n        terminal.writeLine('The Rush engine has not been installed yet. Invoking install-run-rush.js...');\n\n        const installAndRuhRushProcess: SpawnSyncReturns<string> = Executable.spawnSync(\n          'node',\n          [installAndRunRushJSPath, '--help'],\n          {\n            stdio: 'pipe'\n          }\n        );\n\n        installAndRunRushStderrContent = installAndRuhRushProcess.stderr;\n        if (installAndRuhRushProcess.status !== 0) {\n          throw new Error(`The ${RUSH_LIB_NAME} package failed to install`);\n        }\n\n        // Retry to load \"rush-lib\" after install-run-rush run\n        terminal.writeVerboseLine(\n          `Trying to load  ${RUSH_LIB_NAME} installed by install-run-rush a second time`\n        );\n        rushLibModule = requireRushLibUnderFolderPath(installRunNodeModuleFolder);\n      } catch (e) {\n        console.error(`${installAndRunRushStderrContent}`);\n        throw new Error(`The ${RUSH_LIB_NAME} package failed to load`);\n      }\n    }\n\n    if (rushLibModule !== undefined) {\n      // to track which scenario is active and how it got initialized.\n      global.___rush___rushLibModuleFromInstallAndRunRush = rushLibModule;\n      terminal.writeVerboseLine(`Loaded ${RUSH_LIB_NAME} installed by install-run-rush`);\n    }\n  } catch (e) {\n    // no-catch\n    errorMessage = (e as Error).message;\n  }\n}\n\nif (rushLibModule === undefined) {\n  // This error indicates that a project is trying to import \"@rushstack/rush-sdk\", but the Rush engine\n  // instance cannot be found.  If you are writing Jest tests for a Rush plugin, add \"@microsoft/rush-lib\"\n  // to the devDependencies for your project.\n  console.error(`Error: The @rushstack/rush-sdk package was not able to load the Rush engine:\n${errorMessage}\n`);\n  process.exit(1);\n}\n\n// Based on TypeScript's __exportStar()\nfor (const property in rushLibModule) {\n  if (property !== 'default' && !exports.hasOwnProperty(property)) {\n    const rushLibModuleForClosure: RushLibModuleType = rushLibModule;\n\n    // Based on TypeScript's __createBinding()\n    Object.defineProperty(exports, property, {\n      enumerable: true,\n      get: function () {\n        return rushLibModuleForClosure[property];\n      }\n    });\n  }\n}\n\n/**\n * Require `@microsoft/rush-lib` under the specified folder path.\n */\nfunction requireRushLibUnderFolderPath(folderPath: string): RushLibModuleType {\n  const rushLibModulePath: string = Import.resolveModule({\n    modulePath: RUSH_LIB_NAME,\n    baseFolderPath: folderPath\n  });\n\n  return _require(rushLibModulePath);\n}\n\n/**\n * Find the rush.json location and return the path, or undefined if a rush.json can't be found.\n *\n * @privateRemarks\n * Keep this in sync with `RushConfiguration.tryFindRushJsonLocation`.\n */\nfunction tryFindRushJsonLocation(startingFolder: string): string | undefined {\n  let currentFolder: string = startingFolder;\n\n  // Look upwards at parent folders until we find a folder containing rush.json\n  for (let i: number = 0; i < 10; ++i) {\n    const rushJsonFilename: string = path.join(currentFolder, 'rush.json');\n\n    if (FileSystem.exists(rushJsonFilename)) {\n      return rushJsonFilename;\n    }\n\n    const parentFolder: string = path.dirname(currentFolder);\n    if (parentFolder === currentFolder) {\n      break;\n    }\n\n    currentFolder = parentFolder;\n  }\n\n  return undefined;\n}\n"]}