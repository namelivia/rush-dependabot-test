import { ITerminalProvider } from '@rushstack/node-core-library';
import { IBuildCacheJson } from '../api/BuildCacheConfiguration';
import { ICloudBuildCacheProvider } from '../logic/buildCache/ICloudBuildCacheProvider';
import { ILogger } from './logging/Logger';
import { RushLifecycleHooks } from './RushLifeCycle';
/**
 * @beta
 */
export interface IRushSessionOptions {
    terminalProvider: ITerminalProvider;
    getIsDebugMode: () => boolean;
}
/**
 * @beta
 */
export declare type CloudBuildCacheProviderFactory = (buildCacheJson: IBuildCacheJson) => ICloudBuildCacheProvider;
/**
 * @beta
 */
export declare class RushSession {
    private readonly _options;
    private readonly _cloudBuildCacheProviderFactories;
    readonly hooks: RushLifecycleHooks;
    constructor(options: IRushSessionOptions);
    getLogger(name: string): ILogger;
    get terminalProvider(): ITerminalProvider;
    registerCloudBuildCacheProviderFactory(cacheProviderName: string, factory: CloudBuildCacheProviderFactory): void;
    getCloudBuildCacheProviderFactory(cacheProviderName: string): CloudBuildCacheProviderFactory | undefined;
}
//# sourceMappingURL=RushSession.d.ts.map