{"version":3,"file":"ScanAction.js","sourceRoot":"","sources":["../../../src/cli/actions/ScanAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport colors from 'colors/safe';\nimport * as path from 'path';\nimport builtinPackageNames from 'builtin-modules';\n\nimport { Import, FileSystem } from '@rushstack/node-core-library';\nimport { RushCommandLineParser } from '../RushCommandLineParser';\nimport { CommandLineFlagParameter } from '@rushstack/ts-command-line';\nimport { BaseConfiglessRushAction } from './BaseRushAction';\n\nconst glob: typeof import('glob') = Import.lazy('glob', require);\n\nexport interface IJsonOutput {\n  /**\n   * Dependencies scan from source code\n   */\n  detectedDependencies: string[];\n  /**\n   * Dependencies detected but not declared in package.json\n   */\n  missingDependencies: string[];\n  /**\n   * Dependencies declared in package.json, but not used in source code\n   */\n  unusedDependencies: string[];\n}\n\nexport class ScanAction extends BaseConfiglessRushAction {\n  private _jsonFlag!: CommandLineFlagParameter;\n  private _allFlag!: CommandLineFlagParameter;\n\n  public constructor(parser: RushCommandLineParser) {\n    super({\n      actionName: 'scan',\n      summary:\n        'When migrating projects into a Rush repo, this command is helpful for detecting' +\n        ' undeclared dependencies.',\n      documentation:\n        `The Node.js module system allows a project to import NPM packages without explicitly` +\n        ` declaring them as dependencies in the package.json file.  Such \"phantom dependencies\"` +\n        ` can cause problems.  Rush and PNPM use symlinks specifically to protect against phantom dependencies.` +\n        ` These protections may cause runtime errors for existing projects when they are first migrated into` +\n        ` a Rush monorepo.  The \"rush scan\" command is a handy tool for fixing these errors. It scans the \"./src\"` +\n        ` and \"./lib\" folders for import syntaxes such as \"import __ from '__'\", \"require('__')\",` +\n        ` and \"System.import('__').  It prints a report of the referenced packages.  This heuristic is` +\n        ` not perfect, but it can save a lot of time when migrating projects.`,\n      safeForSimultaneousRushProcesses: true,\n      parser\n    });\n  }\n\n  protected onDefineParameters(): void {\n    this._jsonFlag = this.defineFlagParameter({\n      parameterLongName: '--json',\n      description: 'If this flag is specified, output will be in JSON format.'\n    });\n    this._allFlag = this.defineFlagParameter({\n      parameterLongName: '--all',\n      description: 'If this flag is specified, output will list all detected dependencies.'\n    });\n  }\n\n  protected async runAsync(): Promise<void> {\n    const packageJsonFilename: string = path.resolve('./package.json');\n\n    if (!FileSystem.exists(packageJsonFilename)) {\n      throw new Error('You must run \"rush scan\" in a project folder containing a package.json file.');\n    }\n\n    const requireRegExps: RegExp[] = [\n      // Example: require('something')\n      /\\brequire\\s*\\(\\s*[']([^']+\\s*)[']\\)/,\n      /\\brequire\\s*\\(\\s*[\"]([^\"]+)[\"]\\s*\\)/,\n\n      // Example: require.ensure('something')\n      /\\brequire.ensure\\s*\\(\\s*[']([^']+\\s*)[']\\)/,\n      /\\brequire.ensure\\s*\\(\\s*[\"]([^\"]+)[\"]\\s*\\)/,\n\n      // Example: require.resolve('something')\n      /\\brequire.resolve\\s*\\(\\s*[']([^']+\\s*)[']\\)/,\n      /\\brequire.resolve\\s*\\(\\s*[\"]([^\"]+)[\"]\\s*\\)/,\n\n      // Example: System.import('something')\n      /\\bSystem.import\\s*\\(\\s*[']([^']+\\s*)[']\\)/,\n      /\\bSystem.import\\s*\\(\\s*[\"]([^\"]+)[\"]\\s*\\)/,\n\n      // Example:\n      //\n      // import {\n      //   A, B\n      // } from 'something';\n      /\\bfrom\\s*[']([^']+)[']/,\n      /\\bfrom\\s*[\"]([^\"]+)[\"]/,\n\n      // Example:  import 'something';\n      /\\bimport\\s*[']([^']+)[']\\s*\\;/,\n      /\\bimport\\s*[\"]([^\"]+)[\"]\\s*\\;/,\n\n      // Example:\n      // /// <reference types=\"something\" />\n      /\\/\\/\\/\\s*<\\s*reference\\s+types\\s*=\\s*[\"]([^\"]+)[\"]\\s*\\/>/\n    ];\n\n    // Example: \"my-package/lad/dee/dah\" --> \"my-package\"\n    // Example: \"@ms/my-package\" --> \"@ms/my-package\"\n    const packageRegExp: RegExp = /^((@[a-z\\-0-9!_]+\\/)?[a-z\\-0-9!_]+)\\/?/;\n\n    const requireMatches: Set<string> = new Set<string>();\n\n    for (const filename of glob.sync('{./*.{ts,js,tsx,jsx},./{src,lib}/**/*.{ts,js,tsx,jsx}}')) {\n      try {\n        const contents: string = FileSystem.readFile(filename);\n        const lines: string[] = contents.split('\\n');\n\n        for (const line of lines) {\n          for (const requireRegExp of requireRegExps) {\n            const requireRegExpResult: RegExpExecArray | null = requireRegExp.exec(line);\n            if (requireRegExpResult) {\n              requireMatches.add(requireRegExpResult[1]);\n            }\n          }\n        }\n      } catch (error) {\n        console.log(colors.bold('Skipping file due to error: ' + filename));\n      }\n    }\n\n    const packageMatches: Set<string> = new Set<string>();\n\n    requireMatches.forEach((requireMatch: string) => {\n      const packageRegExpResult: RegExpExecArray | null = packageRegExp.exec(requireMatch);\n      if (packageRegExpResult) {\n        packageMatches.add(packageRegExpResult[1]);\n      }\n    });\n\n    const detectedPackageNames: string[] = [];\n\n    packageMatches.forEach((packageName: string) => {\n      if (builtinPackageNames.indexOf(packageName) < 0) {\n        detectedPackageNames.push(packageName);\n      }\n    });\n\n    detectedPackageNames.sort();\n\n    const declaredDependencies: Set<string> = new Set<string>();\n    const declaredDevDependencies: Set<string> = new Set<string>();\n    const missingDependencies: string[] = [];\n    const unusedDependencies: string[] = [];\n    const packageJsonContent: string = FileSystem.readFile(packageJsonFilename);\n    try {\n      const manifest: {\n        dependencies?: Record<string, string>;\n        devDependencies?: Record<string, string>;\n      } = JSON.parse(packageJsonContent);\n      if (manifest.dependencies) {\n        for (const depName of Object.keys(manifest.dependencies)) {\n          declaredDependencies.add(depName);\n        }\n      }\n      if (manifest.devDependencies) {\n        for (const depName of Object.keys(manifest.devDependencies)) {\n          declaredDevDependencies.add(depName);\n        }\n      }\n    } catch (e) {\n      console.error(`JSON.parse ${packageJsonFilename} error`);\n    }\n\n    for (const detectedPkgName of detectedPackageNames) {\n      /**\n       * Missing(phantom) dependencies are\n       * - used in source code\n       * - not decalred in dependencies and devDependencies in package.json\n       */\n      if (!declaredDependencies.has(detectedPkgName) && !declaredDevDependencies.has(detectedPkgName)) {\n        missingDependencies.push(detectedPkgName);\n      }\n    }\n    for (const declaredPkgName of declaredDependencies) {\n      /**\n       * Unused dependencies are\n       * - declared in dependencies in package.json (devDependencies not included)\n       * - not used in source code\n       */\n      if (!detectedPackageNames.includes(declaredPkgName) && !declaredPkgName.startsWith('@types/')) {\n        unusedDependencies.push(declaredPkgName);\n      }\n    }\n\n    const output: IJsonOutput = {\n      detectedDependencies: detectedPackageNames,\n      missingDependencies: missingDependencies,\n      unusedDependencies: unusedDependencies\n    };\n\n    if (this._jsonFlag.value) {\n      console.log(JSON.stringify(output, undefined, 2));\n    } else if (this._allFlag.value) {\n      if (detectedPackageNames.length !== 0) {\n        console.log('Dependencies that seem to be imported by this project:');\n        for (const packageName of detectedPackageNames) {\n          console.log('  ' + packageName);\n        }\n      } else {\n        console.log('This project does not seem to import any NPM packages.');\n      }\n    } else {\n      let wroteAnything: boolean = false;\n\n      if (missingDependencies.length > 0) {\n        console.log(\n          colors.yellow('Possible phantom dependencies') +\n            \" - these seem to be imported but aren't listed in package.json:\"\n        );\n        for (const packageName of missingDependencies) {\n          console.log('  ' + packageName);\n        }\n        wroteAnything = true;\n      }\n\n      if (unusedDependencies.length > 0) {\n        if (wroteAnything) {\n          console.log('');\n        }\n        console.log(\n          colors.yellow('Possible unused dependencies') +\n            \" - these are listed in package.json but don't seem to be imported:\"\n        );\n        for (const packageName of unusedDependencies) {\n          console.log('  ' + packageName);\n        }\n        wroteAnything = true;\n      }\n\n      if (!wroteAnything) {\n        console.log(\n          colors.green('Everything looks good.') + '  No missing or unused dependencies were found.'\n        );\n      }\n    }\n  }\n}\n"]}