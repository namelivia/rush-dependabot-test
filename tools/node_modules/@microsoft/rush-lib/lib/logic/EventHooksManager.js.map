{"version":3,"file":"EventHooksManager.js","sourceRoot":"","sources":["../../src/logic/EventHooksManager.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,uCAAyB;AACzB,uDAAiC;AAGjC,sDAAmD;AACnD,kDAA0C;AAC1C,sDAAmD;AAGnD,MAAa,iBAAiB;IAK5B,YAAmB,iBAAoC;QACrD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC;IAC9D,CAAC;IAEM,MAAM,CAAC,KAAY,EAAE,OAAgB,EAAE,WAAoB;QAChE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QAED,MAAM,OAAO,GAAa,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,WAAW,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,4BAA4B,kBAAK,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC3F,OAAO;aACR;YAED,MAAM,SAAS,GAAc,qBAAS,CAAC,KAAK,EAAE,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,cAAM,CAAC,KAAK,CAAC,6BAA6B,kBAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBACzB,IAAI;oBACF,qBAAS,CAAC,uBAAuB,CAAC,MAAM,EAAE;wBACxC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB;wBAC1C,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc;wBACxD,OAAO,EAAE,IAAI,CAAC,iBAAiB;wBAC/B,YAAY,EAAE,CAAC,OAAO;wBACtB,sBAAsB,EAAE;4BACtB,cAAc,EAAE,IAAI;yBACrB;qBACF,CAAC,CAAC;iBACJ;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CACX,EAAE,CAAC,GAAG;wBACJ,cAAM,CAAC,MAAM,CACX,eAAe,MAAM,mCAAmC;4BACtD,qCAAqC,CACxC,CACJ,CAAC;oBACF,IAAI,OAAO,EAAE;wBACX,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAI,KAAe,CAAC,OAAO,CAAC,CAAC;qBAClD;iBACF;YACH,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,cAAM,CAAC,KAAK,CAAC,0BAA0B,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;SACvF;IACH,CAAC;CACF;AArDD,8CAqDC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as os from 'os';\nimport colors from 'colors/safe';\n\nimport { EventHooks } from '../api/EventHooks';\nimport { Utilities } from '../utilities/Utilities';\nimport { Event } from '../api/EventHooks';\nimport { Stopwatch } from '../utilities/Stopwatch';\nimport { RushConfiguration } from '../api/RushConfiguration';\n\nexport class EventHooksManager {\n  private _rushConfiguration: RushConfiguration;\n  private _eventHooks: EventHooks;\n  private _commonTempFolder: string;\n\n  public constructor(rushConfiguration: RushConfiguration) {\n    this._rushConfiguration = rushConfiguration;\n    this._eventHooks = rushConfiguration.eventHooks;\n    this._commonTempFolder = rushConfiguration.commonTempFolder;\n  }\n\n  public handle(event: Event, isDebug: boolean, ignoreHooks: boolean): void {\n    if (!this._eventHooks) {\n      return;\n    }\n\n    const scripts: string[] = this._eventHooks.get(event);\n    if (scripts.length > 0) {\n      if (ignoreHooks) {\n        console.log(`Skipping event hooks for ${Event[event]} since --ignore-hooks was specified`);\n        return;\n      }\n\n      const stopwatch: Stopwatch = Stopwatch.start();\n      console.log(os.EOL + colors.green(`Executing event hooks for ${Event[event]}`));\n      scripts.forEach((script) => {\n        try {\n          Utilities.executeLifecycleCommand(script, {\n            rushConfiguration: this._rushConfiguration,\n            workingDirectory: this._rushConfiguration.rushJsonFolder,\n            initCwd: this._commonTempFolder,\n            handleOutput: !isDebug,\n            environmentPathOptions: {\n              includeRepoBin: true\n            }\n          });\n        } catch (error) {\n          console.error(\n            os.EOL +\n              colors.yellow(\n                `Event hook \"${script}\" failed. Run \"rush\" with --debug` +\n                  ` to see detailed error information.`\n              )\n          );\n          if (isDebug) {\n            console.error(os.EOL + (error as Error).message);\n          }\n        }\n      });\n      stopwatch.stop();\n      console.log(os.EOL + colors.green(`Event hooks finished. (${stopwatch.toString()})`));\n    }\n  }\n}\n"]}