"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.PhasedCommandHooks = void 0;
const tapable_1 = require("tapable");
/**
 * Hooks into the execution process for phased commands
 * @alpha
 */
class PhasedCommandHooks {
    constructor() {
        /**
         * Hook invoked to create operations for execution.
         * Use the context to distinguish between the initial run and phased runs.
         */
        this.createOperations = new tapable_1.AsyncSeriesWaterfallHook(['operations', 'context'], 'createOperations');
        /**
         * Hook invoked after executing a set of operations.
         * Use the context to distinguish between the initial run and phased runs.
         * Hook is series for stable output.
         */
        this.afterExecuteOperations = new tapable_1.AsyncSeriesHook(['results', 'context']);
        /**
         * Hook invoked after a run has finished and the command is watching for changes.
         * May be used to display additional relevant data to the user.
         * Only relevant when running in watch mode.
         */
        this.waitingForChanges = new tapable_1.SyncHook(undefined, 'waitingForChanges');
    }
}
exports.PhasedCommandHooks = PhasedCommandHooks;
//# sourceMappingURL=PhasedCommandHooks.js.map