{"version":3,"file":"ArtifactoryConfiguration.js","sourceRoot":"","sources":["../../../src/logic/setup/ArtifactoryConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAgF;AA0BhF;;;GAGG;AACH,MAAa,wBAAwB;IAQnC;;OAEG;IACH,YAAmB,YAAoB;QACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,UAAU,GAAG;YAChB,eAAe,EAAE;gBACf,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,EAAE;gBACf,qBAAqB,EAAE,EAAE;aAC1B;SACF,CAAC;QAEF,IAAI,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACzC,IAAI,CAAC,UAAU,GAAG,4BAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,wBAAwB,CAAC,WAAW,CAAC,CAAC;SACtG;IACH,CAAC;IAED;;OAEG;IACH,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;AAhCH,4DAiCC;AAhCgB,oCAAW,GAAe,8BAAU,CAAC,QAAQ,CAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC,CAC1E,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { JsonFile, JsonSchema, FileSystem } from '@rushstack/node-core-library';\n\nexport interface IArtifactoryPackageRegistryJson {\n  enabled: boolean;\n  userNpmrcLinesToAdd?: string[];\n\n  registryUrl: string;\n  artifactoryWebsiteUrl: string;\n\n  messageOverrides?: {\n    introduction?: string;\n    obtainAnAccount?: string;\n    visitWebsite?: string;\n    locateUserName?: string;\n    locateApiKey?: string;\n  };\n}\n\n/**\n * This interface represents the raw artifactory.json file.\n * @beta\n */\nexport interface IArtifactoryJson {\n  packageRegistry: IArtifactoryPackageRegistryJson;\n}\n\n/**\n * Use this class to load the \"common/config/rush/artifactory.json\" config file.\n * It configures the \"rush setup\" command.\n */\nexport class ArtifactoryConfiguration {\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\n    path.resolve(__dirname, '..', '..', 'schemas', 'artifactory.schema.json')\n  );\n\n  private _setupJson: IArtifactoryJson;\n  private _jsonFileName: string;\n\n  /**\n   * @internal\n   */\n  public constructor(jsonFileName: string) {\n    this._jsonFileName = jsonFileName;\n\n    this._setupJson = {\n      packageRegistry: {\n        enabled: false,\n        registryUrl: '',\n        artifactoryWebsiteUrl: ''\n      }\n    };\n\n    if (FileSystem.exists(this._jsonFileName)) {\n      this._setupJson = JsonFile.loadAndValidate(this._jsonFileName, ArtifactoryConfiguration._jsonSchema);\n    }\n  }\n\n  /**\n   * Get the experiments configuration.\n   */\n  public get configuration(): Readonly<IArtifactoryJson> {\n    return this._setupJson;\n  }\n}\n"]}