{"version":3,"file":"ExperimentsConfiguration.js","sourceRoot":"","sources":["../../src/api/ExperimentsConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAgF;AA8ChF;;;;GAIG;AACH,MAAa,wBAAwB;IAQnC;;OAEG;IACH,YAAmB,YAAoB;QACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QAEnC,IAAI,CAAC,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC1C,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,wBAAwB,GAAG,4BAAQ,CAAC,eAAe,CACtD,IAAI,CAAC,aAAa,EAClB,wBAAwB,CAAC,WAAW,CACrC,CAAC;SACH;IACH,CAAC;IAED;;;OAGG;IACH,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC;;AA/BH,4DAgCC;AA/BgB,oCAAW,GAAe,8BAAU,CAAC,QAAQ,CAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC,CACpE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { JsonFile, JsonSchema, FileSystem } from '@rushstack/node-core-library';\n\n/**\n * This interface represents the raw experiments.json file which allows repo\n * maintainers to enable and disable experimental Rush features.\n * @beta\n */\nexport interface IExperimentsJson {\n  /**\n   * By default, 'rush install' passes --no-prefer-frozen-lockfile to 'pnpm install'.\n   * Set this option to true to pass '--frozen-lockfile' instead.\n   */\n  usePnpmFrozenLockfileForRushInstall?: boolean;\n\n  /**\n   * By default, 'rush update' passes --no-prefer-frozen-lockfile to 'pnpm install'.\n   * Set this option to true to pass '--prefer-frozen-lockfile' instead.\n   */\n  usePnpmPreferFrozenLockfileForRushUpdate?: boolean;\n\n  /**\n   * If using the 'preventManualShrinkwrapChanges' option, restricts the hash to only include the layout of external dependencies.\n   * Used to allow links between workspace projects or the addition/removal of references to existing dependency versions to not\n   * cause hash changes.\n   */\n  omitImportersFromPreventManualShrinkwrapChanges?: boolean;\n\n  /**\n   * If true, the chmod field in temporary project tar headers will not be normalized.\n   * This normalization can help ensure consistent tarball integrity across platforms.\n   */\n  noChmodFieldInTarHeaderNormalization?: boolean;\n\n  /**\n   * If true, build caching will respect the allowWarningsInSuccessfulBuild flag and cache builds with warnings.\n   * This will not replay warnings from the cached build.\n   */\n  buildCacheWithAllowWarningsInSuccessfulBuild?: boolean;\n\n  /**\n   * If true, the phased commands feature is enabled. To use this feature, create a \"phased\" command\n   * in common/config/rush/command-line.json.\n   */\n  phasedCommands?: boolean;\n}\n\n/**\n * Use this class to load the \"common/config/rush/experiments.json\" config file.\n * This file allows repo maintainers to enable and disable experimental Rush features.\n * @public\n */\nexport class ExperimentsConfiguration {\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\n    path.resolve(__dirname, '..', 'schemas', 'experiments.schema.json')\n  );\n\n  private _experimentConfiguration: IExperimentsJson;\n  private _jsonFileName: string;\n\n  /**\n   * @internal\n   */\n  public constructor(jsonFileName: string) {\n    this._jsonFileName = jsonFileName;\n    this._experimentConfiguration = {};\n\n    if (!FileSystem.exists(this._jsonFileName)) {\n      this._experimentConfiguration = {};\n    } else {\n      this._experimentConfiguration = JsonFile.loadAndValidate(\n        this._jsonFileName,\n        ExperimentsConfiguration._jsonSchema\n      );\n    }\n  }\n\n  /**\n   * Get the experiments configuration.\n   * @beta\n   */\n  public get configuration(): Readonly<IExperimentsJson> {\n    return this._experimentConfiguration;\n  }\n}\n"]}