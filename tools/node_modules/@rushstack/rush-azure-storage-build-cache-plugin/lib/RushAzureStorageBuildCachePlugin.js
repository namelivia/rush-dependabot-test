"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RushAzureStorageBuildCachePlugin = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
const AzureStorageBuildCacheProviderModule = node_core_library_1.Import.lazy('./AzureStorageBuildCacheProvider', require);
const PLUGIN_NAME = 'AzureStorageBuildCachePlugin';
/**
 * @public
 */
class RushAzureStorageBuildCachePlugin {
    constructor() {
        this.pluginName = PLUGIN_NAME;
    }
    apply(rushSession, rushConfig) {
        rushSession.hooks.initialize.tap(PLUGIN_NAME, () => {
            rushSession.registerCloudBuildCacheProviderFactory('azure-blob-storage', (buildCacheConfig) => {
                const { azureBlobStorageConfiguration } = buildCacheConfig;
                return new AzureStorageBuildCacheProviderModule.AzureStorageBuildCacheProvider({
                    storageAccountName: azureBlobStorageConfiguration.storageAccountName,
                    storageContainerName: azureBlobStorageConfiguration.storageContainerName,
                    azureEnvironment: azureBlobStorageConfiguration.azureEnvironment,
                    blobPrefix: azureBlobStorageConfiguration.blobPrefix,
                    isCacheWriteAllowed: !!azureBlobStorageConfiguration.isCacheWriteAllowed
                });
            });
        });
    }
}
exports.RushAzureStorageBuildCachePlugin = RushAzureStorageBuildCachePlugin;
//# sourceMappingURL=RushAzureStorageBuildCachePlugin.js.map