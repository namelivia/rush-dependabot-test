{"version":3,"file":"SetupChecks.js","sourceRoot":"","sources":["../../src/logic/SetupChecks.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport colors from 'colors/safe';\nimport * as path from 'path';\nimport * as semver from 'semver';\nimport { FileSystem, AlreadyReportedError } from '@rushstack/node-core-library';\nimport { PrintUtilities } from '@rushstack/terminal';\n\nimport { RushConfiguration } from '../api/RushConfiguration';\nimport { RushConstants } from '../logic/RushConstants';\n\n// Refuses to run at all if the PNPM version is older than this, because there\n// are known bugs or missing features in earlier releases.\nconst MINIMUM_SUPPORTED_NPM_VERSION: string = '4.5.0';\n\n// Refuses to run at all if the PNPM version is older than this, because there\n// are known bugs or missing features in earlier releases.\nconst MINIMUM_SUPPORTED_PNPM_VERSION: string = '5.0.0';\n\n/**\n * Validate that the developer's setup is good.\n *\n * These checks are invoked prior to the following commands:\n * - rush install\n * - rush update\n * - rush build\n * - rush rebuild\n */\nexport class SetupChecks {\n  public static validate(rushConfiguration: RushConfiguration): void {\n    // NOTE: The Node.js version is also checked in rush/src/start.ts\n    const errorMessage: string | undefined = SetupChecks._validate(rushConfiguration);\n\n    if (errorMessage) {\n      console.error(colors.red(PrintUtilities.wrapWords(errorMessage)));\n      throw new AlreadyReportedError();\n    }\n  }\n\n  private static _validate(rushConfiguration: RushConfiguration): string | undefined {\n    // Check for outdated tools\n    if (rushConfiguration.packageManager === 'pnpm') {\n      if (semver.lt(rushConfiguration.packageManagerToolVersion, MINIMUM_SUPPORTED_PNPM_VERSION)) {\n        return (\n          `The rush.json file requests PNPM version ` +\n          rushConfiguration.packageManagerToolVersion +\n          `, but PNPM ${MINIMUM_SUPPORTED_PNPM_VERSION} is the minimum supported by Rush.`\n        );\n      }\n    } else if (rushConfiguration.packageManager === 'npm') {\n      if (semver.lt(rushConfiguration.packageManagerToolVersion, MINIMUM_SUPPORTED_NPM_VERSION)) {\n        return (\n          `The rush.json file requests NPM version ` +\n          rushConfiguration.packageManagerToolVersion +\n          `, but NPM ${MINIMUM_SUPPORTED_NPM_VERSION} is the minimum supported by Rush.`\n        );\n      }\n    }\n\n    SetupChecks._checkForPhantomFolders(rushConfiguration);\n  }\n\n  private static _checkForPhantomFolders(rushConfiguration: RushConfiguration): void {\n    const phantomFolders: string[] = [];\n    const seenFolders: Set<string> = new Set<string>();\n\n    // Check from the real parent of the common/temp folder\n    const commonTempParent: string = path.dirname(FileSystem.getRealPath(rushConfiguration.commonTempFolder));\n    SetupChecks._collectPhantomFoldersUpwards(commonTempParent, phantomFolders, seenFolders);\n\n    // Check from the real folder containing rush.json\n    const realRushJsonFolder: string = FileSystem.getRealPath(rushConfiguration.rushJsonFolder);\n    SetupChecks._collectPhantomFoldersUpwards(realRushJsonFolder, phantomFolders, seenFolders);\n\n    if (phantomFolders.length > 0) {\n      if (phantomFolders.length === 1) {\n        console.log(\n          colors.yellow(\n            PrintUtilities.wrapWords(\n              'Warning: A phantom \"node_modules\" folder was found. This defeats Rush\\'s protection against' +\n                ' NPM phantom dependencies and may cause confusing build errors. It is recommended to' +\n                ' delete this folder:'\n            )\n          )\n        );\n      } else {\n        console.log(\n          colors.yellow(\n            PrintUtilities.wrapWords(\n              'Warning: Phantom \"node_modules\" folders were found. This defeats Rush\\'s protection against' +\n                ' NPM phantom dependencies and may cause confusing build errors. It is recommended to' +\n                ' delete these folders:'\n            )\n          )\n        );\n      }\n      for (const folder of phantomFolders) {\n        console.log(colors.yellow(`\"${folder}\"`));\n      }\n      console.log(); // add a newline\n    }\n  }\n\n  /**\n   * Checks \"folder\" and each of its parents to see if it contains a node_modules folder.\n   * The bad folders will be added to phantomFolders.\n   * The seenFolders set is used to avoid duplicates.\n   */\n  private static _collectPhantomFoldersUpwards(\n    folder: string,\n    phantomFolders: string[],\n    seenFolders: Set<string>\n  ): void {\n    // Stop if we reached a folder that we already analyzed\n    while (!seenFolders.has(folder)) {\n      seenFolders.add(folder);\n\n      // If there is a node_modules folder under this folder, add it to the list of bad folders\n      const nodeModulesFolder: string = path.join(folder, RushConstants.nodeModulesFolderName);\n      if (FileSystem.exists(nodeModulesFolder)) {\n        // Collect the names of files/folders in that node_modules folder\n        const filenames: string[] = FileSystem.readFolderItemNames(nodeModulesFolder).filter(\n          (x) => !x.startsWith('.')\n        );\n\n        let ignore: boolean = false;\n\n        if (filenames.length === 0) {\n          // If the node_modules folder is completely empty, then it's not a concern\n          ignore = true;\n        } else if (filenames.length === 1 && filenames[0] === 'vso-task-lib') {\n          // Special case:  The Azure DevOps build agent installs the \"vso-task-lib\" NPM package\n          // in a top-level path such as:\n          //\n          //   /home/vsts/work/node_modules/vso-task-lib\n          //\n          // It is always the only package in that node_modules folder.  The \"vso-task-lib\" package\n          // is now deprecated, so it is unlikely to be a real dependency of any modern project.\n          // To avoid false alarms, we ignore this specific case.\n          ignore = true;\n        }\n\n        if (!ignore) {\n          phantomFolders.push(nodeModulesFolder);\n        }\n      }\n\n      // Walk upwards\n      const parentFolder: string = path.dirname(folder);\n      if (!parentFolder || parentFolder === folder) {\n        // If path.dirname() returns its own input, then means we reached the root\n        break;\n      }\n\n      folder = parentFolder;\n    }\n  }\n}\n"]}