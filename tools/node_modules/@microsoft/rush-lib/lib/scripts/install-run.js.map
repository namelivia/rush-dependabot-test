{"version":3,"file":"install-run.js","sourceRoot":"","sources":["../../src/scripts/install-run.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See the @microsoft/rush package's LICENSE file for license information.\n\n// THIS FILE WAS GENERATED BY A TOOL. ANY MANUAL MODIFICATIONS WILL GET OVERWRITTEN WHENEVER RUSH IS UPGRADED.\n//\n// This script is intended for usage in an automated build environment where a Node tool may not have\n// been preinstalled, or may have an unpredictable version.  This script will automatically install the specified\n// version of the specified tool (if not already installed), and then pass a command-line to it.\n// An example usage would be:\n//\n//    node common/scripts/install-run.js qrcode@1.2.2 qrcode https://rushjs.io\n//\n// For more information, see: https://rushjs.io/pages/maintainer/setup_new_repo/\n\nimport * as childProcess from 'child_process';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { IPackageJson } from '@rushstack/node-core-library';\n\nexport const RUSH_JSON_FILENAME: string = 'rush.json';\nconst RUSH_TEMP_FOLDER_ENV_VARIABLE_NAME: string = 'RUSH_TEMP_FOLDER';\nconst INSTALLED_FLAG_FILENAME: string = 'installed.flag';\nconst NODE_MODULES_FOLDER_NAME: string = 'node_modules';\nconst PACKAGE_JSON_FILENAME: string = 'package.json';\n\nexport interface ILogger {\n  info: (string: string) => void;\n  error: (string: string) => void;\n}\n\n/**\n * Parse a package specifier (in the form of name\\@version) into name and version parts.\n */\nfunction _parsePackageSpecifier(rawPackageSpecifier: string): IPackageSpecifier {\n  rawPackageSpecifier = (rawPackageSpecifier || '').trim();\n  const separatorIndex: number = rawPackageSpecifier.lastIndexOf('@');\n\n  let name: string;\n  let version: string | undefined = undefined;\n  if (separatorIndex === 0) {\n    // The specifier starts with a scope and doesn't have a version specified\n    name = rawPackageSpecifier;\n  } else if (separatorIndex === -1) {\n    // The specifier doesn't have a version\n    name = rawPackageSpecifier;\n  } else {\n    name = rawPackageSpecifier.substring(0, separatorIndex);\n    version = rawPackageSpecifier.substring(separatorIndex + 1);\n  }\n\n  if (!name) {\n    throw new Error(`Invalid package specifier: ${rawPackageSpecifier}`);\n  }\n\n  return { name, version };\n}\n\n/**\n * As a workaround, copyAndTrimNpmrcFile() copies the .npmrc file to the target folder, and also trims\n * unusable lines from the .npmrc file.\n *\n * Why are we trimming the .npmrc lines?  NPM allows environment variables to be specified in\n * the .npmrc file to provide different authentication tokens for different registry.\n * However, if the environment variable is undefined, it expands to an empty string, which\n * produces a valid-looking mapping with an invalid URL that causes an error.  Instead,\n * we'd prefer to skip that line and continue looking in other places such as the user's\n * home directory.\n *\n * IMPORTANT: THIS CODE SHOULD BE KEPT UP TO DATE WITH Utilities.copyAndTrimNpmrcFile()\n */\nfunction _copyAndTrimNpmrcFile(logger: ILogger, sourceNpmrcPath: string, targetNpmrcPath: string): void {\n  logger.info(`Transforming ${sourceNpmrcPath}`); // Verbose\n  logger.info(`  --> \"${targetNpmrcPath}\"`);\n  let npmrcFileLines: string[] = fs.readFileSync(sourceNpmrcPath).toString().split('\\n');\n  npmrcFileLines = npmrcFileLines.map((line) => (line || '').trim());\n  const resultLines: string[] = [];\n\n  // This finds environment variable tokens that look like \"${VAR_NAME}\"\n  const expansionRegExp: RegExp = /\\$\\{([^\\}]+)\\}/g;\n\n  // Comment lines start with \"#\" or \";\"\n  const commentRegExp: RegExp = /^\\s*[#;]/;\n\n  // Trim out lines that reference environment variables that aren't defined\n  for (const line of npmrcFileLines) {\n    let lineShouldBeTrimmed: boolean = false;\n\n    // Ignore comment lines\n    if (!commentRegExp.test(line)) {\n      const environmentVariables: string[] | null = line.match(expansionRegExp);\n      if (environmentVariables) {\n        for (const token of environmentVariables) {\n          // Remove the leading \"${\" and the trailing \"}\" from the token\n          const environmentVariableName: string = token.substring(2, token.length - 1);\n\n          // Is the environment variable defined?\n          if (!process.env[environmentVariableName]) {\n            // No, so trim this line\n            lineShouldBeTrimmed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (lineShouldBeTrimmed) {\n      // Example output:\n      // \"; MISSING ENVIRONMENT VARIABLE: //my-registry.com/npm/:_authToken=${MY_AUTH_TOKEN}\"\n      resultLines.push('; MISSING ENVIRONMENT VARIABLE: ' + line);\n    } else {\n      resultLines.push(line);\n    }\n  }\n\n  fs.writeFileSync(targetNpmrcPath, resultLines.join(os.EOL));\n}\n\n/**\n * syncNpmrc() copies the .npmrc file to the target folder, and also trims unusable lines from the .npmrc file.\n * If the source .npmrc file not exist, then syncNpmrc() will delete an .npmrc that is found in the target folder.\n *\n * IMPORTANT: THIS CODE SHOULD BE KEPT UP TO DATE WITH Utilities._syncNpmrc()\n */\nfunction _syncNpmrc(\n  logger: ILogger,\n  sourceNpmrcFolder: string,\n  targetNpmrcFolder: string,\n  useNpmrcPublish?: boolean\n): void {\n  const sourceNpmrcPath: string = path.join(\n    sourceNpmrcFolder,\n    !useNpmrcPublish ? '.npmrc' : '.npmrc-publish'\n  );\n  const targetNpmrcPath: string = path.join(targetNpmrcFolder, '.npmrc');\n  try {\n    if (fs.existsSync(sourceNpmrcPath)) {\n      _copyAndTrimNpmrcFile(logger, sourceNpmrcPath, targetNpmrcPath);\n    } else if (fs.existsSync(targetNpmrcPath)) {\n      // If the source .npmrc doesn't exist and there is one in the target, delete the one in the target\n      logger.info(`Deleting ${targetNpmrcPath}`); // Verbose\n      fs.unlinkSync(targetNpmrcPath);\n    }\n  } catch (e) {\n    throw new Error(`Error syncing .npmrc file: ${e}`);\n  }\n}\n\nlet _npmPath: string | undefined = undefined;\n\n/**\n * Get the absolute path to the npm executable\n */\nexport function getNpmPath(): string {\n  if (!_npmPath) {\n    try {\n      if (os.platform() === 'win32') {\n        // We're on Windows\n        const whereOutput: string = childProcess.execSync('where npm', { stdio: [] }).toString();\n        const lines: string[] = whereOutput.split(os.EOL).filter((line) => !!line);\n\n        // take the last result, we are looking for a .cmd command\n        // see https://github.com/microsoft/rushstack/issues/759\n        _npmPath = lines[lines.length - 1];\n      } else {\n        // We aren't on Windows - assume we're on *NIX or Darwin\n        _npmPath = childProcess.execSync('command -v npm', { stdio: [] }).toString();\n      }\n    } catch (e) {\n      throw new Error(`Unable to determine the path to the NPM tool: ${e}`);\n    }\n\n    _npmPath = _npmPath.trim();\n    if (!fs.existsSync(_npmPath)) {\n      throw new Error('The NPM executable does not exist');\n    }\n  }\n\n  return _npmPath;\n}\n\nfunction _ensureFolder(folderPath: string): void {\n  if (!fs.existsSync(folderPath)) {\n    const parentDir: string = path.dirname(folderPath);\n    _ensureFolder(parentDir);\n    fs.mkdirSync(folderPath);\n  }\n}\n\n/**\n * Create missing directories under the specified base directory, and return the resolved directory.\n *\n * Does not support \".\" or \"..\" path segments.\n * Assumes the baseFolder exists.\n */\nfunction _ensureAndJoinPath(baseFolder: string, ...pathSegments: string[]): string {\n  let joinedPath: string = baseFolder;\n  try {\n    for (let pathSegment of pathSegments) {\n      pathSegment = pathSegment.replace(/[\\\\\\/]/g, '+');\n      joinedPath = path.join(joinedPath, pathSegment);\n      if (!fs.existsSync(joinedPath)) {\n        fs.mkdirSync(joinedPath);\n      }\n    }\n  } catch (e) {\n    throw new Error(\n      `Error building local installation folder (${path.join(baseFolder, ...pathSegments)}): ${e}`\n    );\n  }\n\n  return joinedPath;\n}\n\nfunction _getRushTempFolder(rushCommonFolder: string): string {\n  const rushTempFolder: string | undefined = process.env[RUSH_TEMP_FOLDER_ENV_VARIABLE_NAME];\n  if (rushTempFolder !== undefined) {\n    _ensureFolder(rushTempFolder);\n    return rushTempFolder;\n  } else {\n    return _ensureAndJoinPath(rushCommonFolder, 'temp');\n  }\n}\n\nexport interface IPackageSpecifier {\n  name: string;\n  version: string | undefined;\n}\n\n/**\n * Resolve a package specifier to a static version\n */\nfunction _resolvePackageVersion(\n  logger: ILogger,\n  rushCommonFolder: string,\n  { name, version }: IPackageSpecifier\n): string {\n  if (!version) {\n    version = '*'; // If no version is specified, use the latest version\n  }\n\n  if (version.match(/^[a-zA-Z0-9\\-\\+\\.]+$/)) {\n    // If the version contains only characters that we recognize to be used in static version specifiers,\n    // pass the version through\n    return version;\n  } else {\n    // version resolves to\n    try {\n      const rushTempFolder: string = _getRushTempFolder(rushCommonFolder);\n      const sourceNpmrcFolder: string = path.join(rushCommonFolder, 'config', 'rush');\n\n      _syncNpmrc(logger, sourceNpmrcFolder, rushTempFolder);\n\n      const npmPath: string = getNpmPath();\n\n      // This returns something that looks like:\n      //  @microsoft/rush@3.0.0 '3.0.0'\n      //  @microsoft/rush@3.0.1 '3.0.1'\n      //  ...\n      //  @microsoft/rush@3.0.20 '3.0.20'\n      //  <blank line>\n      const npmVersionSpawnResult: childProcess.SpawnSyncReturns<Buffer> = childProcess.spawnSync(\n        npmPath,\n        ['view', `${name}@${version}`, 'version', '--no-update-notifier'],\n        {\n          cwd: rushTempFolder,\n          stdio: []\n        }\n      );\n\n      if (npmVersionSpawnResult.status !== 0) {\n        throw new Error(`\"npm view\" returned error code ${npmVersionSpawnResult.status}`);\n      }\n\n      const npmViewVersionOutput: string = npmVersionSpawnResult.stdout.toString();\n      const versionLines: string[] = npmViewVersionOutput.split('\\n').filter((line) => !!line);\n      const latestVersion: string | undefined = versionLines[versionLines.length - 1];\n      if (!latestVersion) {\n        throw new Error('No versions found for the specified version range.');\n      }\n\n      const versionMatches: string[] | null = latestVersion.match(/^.+\\s\\'(.+)\\'$/);\n      if (!versionMatches) {\n        throw new Error(`Invalid npm output ${latestVersion}`);\n      }\n\n      return versionMatches[1];\n    } catch (e) {\n      throw new Error(`Unable to resolve version ${version} of package ${name}: ${e}`);\n    }\n  }\n}\n\nlet _rushJsonFolder: string | undefined;\n/**\n * Find the absolute path to the folder containing rush.json\n */\nexport function findRushJsonFolder(): string {\n  if (!_rushJsonFolder) {\n    let basePath: string = __dirname;\n    let tempPath: string = __dirname;\n    do {\n      const testRushJsonPath: string = path.join(basePath, RUSH_JSON_FILENAME);\n      if (fs.existsSync(testRushJsonPath)) {\n        _rushJsonFolder = basePath;\n        break;\n      } else {\n        basePath = tempPath;\n      }\n    } while (basePath !== (tempPath = path.dirname(basePath))); // Exit the loop when we hit the disk root\n\n    if (!_rushJsonFolder) {\n      throw new Error('Unable to find rush.json.');\n    }\n  }\n\n  return _rushJsonFolder;\n}\n\n/**\n * Detects if the package in the specified directory is installed\n */\nfunction _isPackageAlreadyInstalled(packageInstallFolder: string): boolean {\n  try {\n    const flagFilePath: string = path.join(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    if (!fs.existsSync(flagFilePath)) {\n      return false;\n    }\n\n    const fileContents: string = fs.readFileSync(flagFilePath).toString();\n    return fileContents.trim() === process.version;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the following files and directories under the specified folder path:\n *  - installed.flag\n *  -\n *  - node_modules\n */\nfunction _cleanInstallFolder(rushTempFolder: string, packageInstallFolder: string): void {\n  try {\n    const flagFile: string = path.resolve(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    if (fs.existsSync(flagFile)) {\n      fs.unlinkSync(flagFile);\n    }\n\n    const packageLockFile: string = path.resolve(packageInstallFolder, 'package-lock.json');\n    if (fs.existsSync(packageLockFile)) {\n      fs.unlinkSync(packageLockFile);\n    }\n\n    const nodeModulesFolder: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME);\n    if (fs.existsSync(nodeModulesFolder)) {\n      const rushRecyclerFolder: string = _ensureAndJoinPath(rushTempFolder, 'rush-recycler');\n\n      fs.renameSync(nodeModulesFolder, path.join(rushRecyclerFolder, `install-run-${Date.now().toString()}`));\n    }\n  } catch (e) {\n    throw new Error(`Error cleaning the package install folder (${packageInstallFolder}): ${e}`);\n  }\n}\n\nfunction _createPackageJson(packageInstallFolder: string, name: string, version: string): void {\n  try {\n    const packageJsonContents: IPackageJson = {\n      name: 'ci-rush',\n      version: '0.0.0',\n      dependencies: {\n        [name]: version\n      },\n      description: \"DON'T WARN\",\n      repository: \"DON'T WARN\",\n      license: 'MIT'\n    };\n\n    const packageJsonPath: string = path.join(packageInstallFolder, PACKAGE_JSON_FILENAME);\n    fs.writeFileSync(packageJsonPath, JSON.stringify(packageJsonContents, undefined, 2));\n  } catch (e) {\n    throw new Error(`Unable to create package.json: ${e}`);\n  }\n}\n\n/**\n * Run \"npm install\" in the package install folder.\n */\nfunction _installPackage(logger: ILogger, packageInstallFolder: string, name: string, version: string): void {\n  try {\n    logger.info(`Installing ${name}...`);\n    const npmPath: string = getNpmPath();\n    const result: childProcess.SpawnSyncReturns<Buffer> = childProcess.spawnSync(npmPath, ['install'], {\n      stdio: 'inherit',\n      cwd: packageInstallFolder,\n      env: process.env\n    });\n\n    if (result.status !== 0) {\n      throw new Error('\"npm install\" encountered an error');\n    }\n\n    logger.info(`Successfully installed ${name}@${version}`);\n  } catch (e) {\n    throw new Error(`Unable to install package: ${e}`);\n  }\n}\n\n/**\n * Get the \".bin\" path for the package.\n */\nfunction _getBinPath(packageInstallFolder: string, binName: string): string {\n  const binFolderPath: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME, '.bin');\n  const resolvedBinName: string = os.platform() === 'win32' ? `${binName}.cmd` : binName;\n  return path.resolve(binFolderPath, resolvedBinName);\n}\n\n/**\n * Write a flag file to the package's install directory, signifying that the install was successful.\n */\nfunction _writeFlagFile(packageInstallFolder: string): void {\n  try {\n    const flagFilePath: string = path.join(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    fs.writeFileSync(flagFilePath, process.version);\n  } catch (e) {\n    throw new Error(`Unable to create installed.flag file in ${packageInstallFolder}`);\n  }\n}\n\nexport function installAndRun(\n  logger: ILogger,\n  packageName: string,\n  packageVersion: string,\n  packageBinName: string,\n  packageBinArgs: string[]\n): number {\n  const rushJsonFolder: string = findRushJsonFolder();\n  const rushCommonFolder: string = path.join(rushJsonFolder, 'common');\n  const rushTempFolder: string = _getRushTempFolder(rushCommonFolder);\n  const packageInstallFolder: string = _ensureAndJoinPath(\n    rushTempFolder,\n    'install-run',\n    `${packageName}@${packageVersion}`\n  );\n\n  if (!_isPackageAlreadyInstalled(packageInstallFolder)) {\n    // The package isn't already installed\n    _cleanInstallFolder(rushTempFolder, packageInstallFolder);\n\n    const sourceNpmrcFolder: string = path.join(rushCommonFolder, 'config', 'rush');\n    _syncNpmrc(logger, sourceNpmrcFolder, packageInstallFolder);\n\n    _createPackageJson(packageInstallFolder, packageName, packageVersion);\n    _installPackage(logger, packageInstallFolder, packageName, packageVersion);\n    _writeFlagFile(packageInstallFolder);\n  }\n\n  const statusMessage: string = `Invoking \"${packageBinName} ${packageBinArgs.join(' ')}\"`;\n  const statusMessageLine: string = new Array(statusMessage.length + 1).join('-');\n  logger.info(os.EOL + statusMessage + os.EOL + statusMessageLine + os.EOL);\n\n  const binPath: string = _getBinPath(packageInstallFolder, packageBinName);\n  const binFolderPath: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME, '.bin');\n\n  // Windows environment variables are case-insensitive.  Instead of using SpawnSyncOptions.env, we need to\n  // assign via the process.env proxy to ensure that we append to the right PATH key.\n  const originalEnvPath: string = process.env.PATH || '';\n  let result: childProcess.SpawnSyncReturns<Buffer>;\n  try {\n    // Node.js on Windows can not spawn a file when the path has a space on it\n    // unless the path gets wrapped in a cmd friendly way and shell mode is used\n    const shouldUseShell: boolean = binPath.includes(' ') && os.platform() === 'win32';\n    const platformBinPath: string = shouldUseShell ? `\"${binPath}\"` : binPath;\n\n    process.env.PATH = [binFolderPath, originalEnvPath].join(path.delimiter);\n    result = childProcess.spawnSync(platformBinPath, packageBinArgs, {\n      stdio: 'inherit',\n      windowsVerbatimArguments: false,\n      shell: shouldUseShell,\n      cwd: process.cwd(),\n      env: process.env\n    });\n  } finally {\n    process.env.PATH = originalEnvPath;\n  }\n  if (result.status !== null) {\n    return result.status;\n  } else {\n    throw result.error || new Error('An unknown error occurred.');\n  }\n}\n\nexport function runWithErrorAndStatusCode(logger: ILogger, fn: () => number): void {\n  process.exitCode = 1;\n\n  try {\n    const exitCode: number = fn();\n    process.exitCode = exitCode;\n  } catch (e) {\n    logger.error(os.EOL + os.EOL + (e as Error).toString() + os.EOL + os.EOL);\n  }\n}\n\nfunction _run(): void {\n  const [\n    nodePath /* Ex: /bin/node */,\n    scriptPath /* /repo/common/scripts/install-run-rush.js */,\n    rawPackageSpecifier /* qrcode@^1.2.0 */,\n    packageBinName /* qrcode */,\n    ...packageBinArgs /* [-f, myproject/lib] */\n  ]: string[] = process.argv;\n\n  if (!nodePath) {\n    throw new Error('Unexpected exception: could not detect node path');\n  }\n\n  if (path.basename(scriptPath).toLowerCase() !== 'install-run.js') {\n    // If install-run.js wasn't directly invoked, don't execute the rest of this function. Return control\n    // to the script that (presumably) imported this file\n\n    return;\n  }\n\n  if (process.argv.length < 4) {\n    console.log('Usage: install-run.js <package>@<version> <command> [args...]');\n    console.log('Example: install-run.js qrcode@1.2.2 qrcode https://rushjs.io');\n    process.exit(1);\n  }\n\n  const logger: ILogger = { info: console.log, error: console.error };\n\n  runWithErrorAndStatusCode(logger, () => {\n    const rushJsonFolder: string = findRushJsonFolder();\n    const rushCommonFolder: string = _ensureAndJoinPath(rushJsonFolder, 'common');\n\n    const packageSpecifier: IPackageSpecifier = _parsePackageSpecifier(rawPackageSpecifier);\n    const name: string = packageSpecifier.name;\n    const version: string = _resolvePackageVersion(logger, rushCommonFolder, packageSpecifier);\n\n    if (packageSpecifier.version !== version) {\n      console.log(`Resolved to ${name}@${version}`);\n    }\n\n    return installAndRun(logger, name, version, packageBinName, packageBinArgs);\n  });\n}\n\n_run();\n"]}