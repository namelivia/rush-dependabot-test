{"version":3,"file":"RushXCommandLine.js","sourceRoot":"","sources":["../../src/cli/RushXCommandLine.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport colors from 'colors/safe';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { PackageJsonLookup, IPackageJson, Text } from '@rushstack/node-core-library';\nimport { DEFAULT_CONSOLE_WIDTH, PrintUtilities } from '@rushstack/terminal';\n\nimport { Utilities } from '../utilities/Utilities';\nimport { ProjectCommandSet } from '../logic/ProjectCommandSet';\nimport { Rush } from '../api/Rush';\nimport { RushConfiguration } from '../api/RushConfiguration';\nimport { NodeJsCompatibility } from '../logic/NodeJsCompatibility';\nimport { RushStartupBanner } from './RushStartupBanner';\n\n/**\n * @internal\n */\nexport interface ILaunchRushXInternalOptions {\n  isManaged: boolean;\n\n  alreadyReportedNodeTooNewError?: boolean;\n}\n\ninterface IRushXCommandLineArguments {\n  /**\n   * Flag indicating whether to suppress any rushx startup information.\n   */\n  quiet: boolean;\n\n  /**\n   * Flag indicating whether the user has asked for help.\n   */\n  help: boolean;\n\n  /**\n   * The command to run (i.e., the target \"script\" in package.json.)\n   */\n  commandName: string;\n\n  /**\n   * Any additional arguments/parameters passed after the command name.\n   */\n  commandArgs: string[];\n}\n\nexport class RushXCommandLine {\n  public static launchRushX(launcherVersion: string, isManaged: boolean): void {\n    RushXCommandLine._launchRushXInternal(launcherVersion, { isManaged });\n  }\n\n  /**\n   * @internal\n   */\n  public static _launchRushXInternal(launcherVersion: string, options: ILaunchRushXInternalOptions): void {\n    // Node.js can sometimes accidentally terminate with a zero exit code  (e.g. for an uncaught\n    // promise exception), so we start with the assumption that the exit code is 1\n    // and set it to 0 only on success.\n    process.exitCode = 1;\n\n    const args: IRushXCommandLineArguments = this._getCommandLineArguments();\n\n    if (!args.quiet) {\n      RushStartupBanner.logStreamlinedBanner(Rush.version, options.isManaged);\n    }\n\n    try {\n      // Are we in a Rush repo?\n      let rushConfiguration: RushConfiguration | undefined = undefined;\n      if (RushConfiguration.tryFindRushJsonLocation()) {\n        rushConfiguration = RushConfiguration.loadFromDefaultLocation({ showVerbose: false });\n      }\n\n      NodeJsCompatibility.warnAboutCompatibilityIssues({\n        isRushLib: true,\n        alreadyReportedNodeTooNewError: !!options.alreadyReportedNodeTooNewError,\n        rushConfiguration\n      });\n\n      // Find the governing package.json for this folder:\n      const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\n\n      const packageJsonFilePath: string | undefined = packageJsonLookup.tryGetPackageJsonFilePathFor(\n        process.cwd()\n      );\n      if (!packageJsonFilePath) {\n        console.log(colors.red('This command should be used inside a project folder.'));\n        console.log(\n          `Unable to find a package.json file in the current working directory or any of its parents.`\n        );\n        return;\n      }\n\n      if (rushConfiguration && !rushConfiguration.tryGetProjectForPath(process.cwd())) {\n        // GitHub #2713: Users reported confusion resulting from a situation where \"rush install\"\n        // did not install the project's dependencies, because the project was not registered.\n        console.log(\n          colors.yellow(\n            'Warning: You are invoking \"rushx\" inside a Rush repository, but this project is not registered in rush.json.'\n          )\n        );\n      }\n\n      const packageJson: IPackageJson = packageJsonLookup.loadPackageJson(packageJsonFilePath);\n\n      const projectCommandSet: ProjectCommandSet = new ProjectCommandSet(packageJson);\n\n      if (args.help) {\n        RushXCommandLine._showUsage(packageJson, projectCommandSet);\n        return;\n      }\n\n      const scriptBody: string | undefined = projectCommandSet.tryGetScriptBody(args.commandName);\n\n      if (scriptBody === undefined) {\n        console.log(\n          colors.red(\n            `Error: The command \"${args.commandName}\" is not defined in the` +\n              ` package.json file for this project.`\n          )\n        );\n\n        if (projectCommandSet.commandNames.length > 0) {\n          console.log(\n            os.EOL +\n              'Available commands for this project are: ' +\n              projectCommandSet.commandNames.map((x) => `\"${x}\"`).join(', ')\n          );\n        }\n\n        console.log(`Use ${colors.yellow('\"rushx --help\"')} for more information.`);\n        return;\n      }\n\n      let commandWithArgs: string = scriptBody;\n      let commandWithArgsForDisplay: string = scriptBody;\n      if (args.commandArgs.length > 0) {\n        // This approach is based on what NPM 7 now does:\n        // https://github.com/npm/run-script/blob/47a4d539fb07220e7215cc0e482683b76407ef9b/lib/run-script-pkg.js#L34\n        const escapedRemainingArgs: string[] = args.commandArgs.map((x) => Utilities.escapeShellParameter(x));\n\n        commandWithArgs += ' ' + escapedRemainingArgs.join(' ');\n\n        // Display it nicely without the extra quotes\n        commandWithArgsForDisplay += ' ' + args.commandArgs.join(' ');\n      }\n\n      if (!args.quiet) {\n        console.log('> ' + JSON.stringify(commandWithArgsForDisplay) + os.EOL);\n      }\n\n      const packageFolder: string = path.dirname(packageJsonFilePath);\n\n      const exitCode: number = Utilities.executeLifecycleCommand(commandWithArgs, {\n        rushConfiguration,\n        workingDirectory: packageFolder,\n        // If there is a rush.json then use its .npmrc from the temp folder.\n        // Otherwise look for npmrc in the project folder.\n        initCwd: rushConfiguration ? rushConfiguration.commonTempFolder : packageFolder,\n        handleOutput: false,\n        environmentPathOptions: {\n          includeProjectBin: true\n        }\n      });\n\n      if (exitCode > 0) {\n        console.log(colors.red(`The script failed with exit code ${exitCode}`));\n      }\n\n      process.exitCode = exitCode;\n    } catch (error) {\n      console.log(colors.red('Error: ' + (error as Error).message));\n    }\n  }\n\n  private static _getCommandLineArguments(): IRushXCommandLineArguments {\n    // 0 = node.exe\n    // 1 = rushx\n    const args: string[] = process.argv.slice(2);\n    const unknownArgs: string[] = [];\n\n    let help: boolean = false;\n    let quiet: boolean = false;\n    let commandName: string = '';\n    const commandArgs: string[] = [];\n\n    for (let index: number = 0; index < args.length; index++) {\n      const argValue: string = args[index];\n\n      if (!commandName) {\n        if (argValue === '-q' || argValue === '--quiet') {\n          quiet = true;\n        } else if (argValue === '-h' || argValue === '--help') {\n          help = true;\n        } else if (argValue.startsWith('-')) {\n          unknownArgs.push(args[index]);\n        } else {\n          commandName = args[index];\n        }\n      } else {\n        commandArgs.push(args[index]);\n      }\n    }\n\n    if (!commandName) {\n      help = true;\n    }\n\n    if (unknownArgs.length > 0) {\n      // Future TODO: Instead of just displaying usage info, we could display a\n      // specific error about the unknown flag the user tried to pass to rushx.\n      help = true;\n    }\n\n    return {\n      help,\n      quiet,\n      commandName,\n      commandArgs\n    };\n  }\n\n  private static _showUsage(packageJson: IPackageJson, projectCommandSet: ProjectCommandSet): void {\n    console.log('usage: rushx [-h]');\n    console.log('       rushx [-q/--quiet] <command> ...' + os.EOL);\n\n    console.log('Optional arguments:');\n    console.log('  -h, --help            Show this help message and exit.');\n    console.log('  -q, --quiet           Hide rushx startup information.' + os.EOL);\n\n    if (projectCommandSet.commandNames.length > 0) {\n      console.log(`Project commands for ${colors.cyan(packageJson.name)}:`);\n\n      // Calculate the length of the longest script name, for formatting\n      let maxLength: number = 0;\n      for (const commandName of projectCommandSet.commandNames) {\n        maxLength = Math.max(maxLength, commandName.length);\n      }\n\n      for (const commandName of projectCommandSet.commandNames) {\n        const escapedScriptBody: string = JSON.stringify(projectCommandSet.getScriptBody(commandName));\n\n        // The length of the string e.g. \"  command: \"\n        const firstPartLength: number = 2 + maxLength + 2;\n        // The length for truncating the escaped escapedScriptBody so it doesn't wrap\n        // to the next line\n        const consoleWidth: number = PrintUtilities.getConsoleWidth() || DEFAULT_CONSOLE_WIDTH;\n        const truncateLength: number = Math.max(0, consoleWidth - firstPartLength) - 1;\n\n        console.log(\n          // Example: \"  command: \"\n          '  ' +\n            colors.cyan(Text.padEnd(commandName + ':', maxLength + 2)) +\n            // Example: \"do some thin...\"\n            Text.truncateWithEllipsis(escapedScriptBody, truncateLength)\n        );\n      }\n\n      if (projectCommandSet.malformedScriptNames.length > 0) {\n        console.log(\n          os.EOL +\n            colors.yellow(\n              'Warning: Some \"scripts\" entries in the package.json file' +\n                ' have malformed names: ' +\n                projectCommandSet.malformedScriptNames.map((x) => `\"${x}\"`).join(', ')\n            )\n        );\n      }\n    } else {\n      console.log(colors.yellow('Warning: No commands are defined yet for this project.'));\n      console.log(\n        'You can define a command by adding a \"scripts\" table to the project\\'s package.json file.'\n      );\n    }\n  }\n}\n"]}