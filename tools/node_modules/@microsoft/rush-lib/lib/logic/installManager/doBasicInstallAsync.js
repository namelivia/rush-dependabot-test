"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.doBasicInstallAsync = void 0;
const InstallManagerFactory_1 = require("../InstallManagerFactory");
const SetupChecks_1 = require("../SetupChecks");
const PurgeManager_1 = require("../PurgeManager");
const VersionMismatchFinder_1 = require("../versionMismatch/VersionMismatchFinder");
async function doBasicInstallAsync(options) {
    const { rushConfiguration, rushGlobalFolder, isDebug } = options;
    VersionMismatchFinder_1.VersionMismatchFinder.ensureConsistentVersions(rushConfiguration);
    SetupChecks_1.SetupChecks.validate(rushConfiguration);
    const purgeManager = new PurgeManager_1.PurgeManager(rushConfiguration, rushGlobalFolder);
    const installManager = InstallManagerFactory_1.InstallManagerFactory.getInstallManager(rushConfiguration, rushGlobalFolder, purgeManager, {
        debug: isDebug,
        allowShrinkwrapUpdates: false,
        checkOnly: false,
        bypassPolicy: false,
        noLink: false,
        fullUpgrade: false,
        recheckShrinkwrap: false,
        collectLogFile: false,
        pnpmFilterArguments: [],
        maxInstallAttempts: 1,
        networkConcurrency: undefined
    });
    try {
        await installManager.doInstallAsync();
    }
    finally {
        purgeManager.deleteAll();
    }
}
exports.doBasicInstallAsync = doBasicInstallAsync;
//# sourceMappingURL=doBasicInstallAsync.js.map