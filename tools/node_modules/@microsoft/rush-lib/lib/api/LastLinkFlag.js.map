{"version":3,"file":"LastLinkFlag.js","sourceRoot":"","sources":["../../src/api/LastLinkFlag.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,uDAAoD;AACpD,oEAAmF;AAGtE,QAAA,wBAAwB,GAAW,gBAAgB,CAAC;AAEjE;;;;GAIG;AACH,MAAa,YAAa,SAAQ,iCAAe;IAC/C;;OAEG;IACI,OAAO;QACZ,IAAI,QAAgC,CAAC;QACrC,IAAI;YACF,QAAQ,GAAG,4BAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;QAAC,OAAO,GAAG,EAAE;YACZ,gBAAgB;SACjB;QACD,OAAO,CAAC,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED;;OAEG;IACI,8BAA8B;QACnC,MAAM,IAAI,iCAAa,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,IAAc,QAAQ;QACpB,OAAO,gCAAwB,CAAC;IAClC,CAAC;CACF;AAxBD,oCAwBC;AAED;;;;GAIG;AACH,MAAa,mBAAmB;IAC9B;;;;;;;OAOG;IACI,MAAM,CAAC,iBAAiB,CAAC,iBAAoC;QAClE,OAAO,IAAI,YAAY,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAClE,CAAC;CACF;AAZD,kDAYC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { LastInstallFlag } from './LastInstallFlag';\nimport { JsonObject, JsonFile, InternalError } from '@rushstack/node-core-library';\nimport { RushConfiguration } from './RushConfiguration';\n\nexport const LAST_LINK_FLAG_FILE_NAME: string = 'last-link.flag';\n\n/**\n * A helper class for managing the last-link flag, which is persistent and\n * indicates that linking was completed successfully.\n * @internal\n */\nexport class LastLinkFlag extends LastInstallFlag {\n  /**\n   * @override\n   */\n  public isValid(): boolean {\n    let oldState: JsonObject | undefined;\n    try {\n      oldState = JsonFile.load(this.path);\n    } catch (err) {\n      // Swallow error\n    }\n    return !!oldState;\n  }\n\n  /**\n   * @override\n   */\n  public checkValidAndReportStoreIssues(): boolean {\n    throw new InternalError('Not implemented');\n  }\n\n  protected get flagName(): string {\n    return LAST_LINK_FLAG_FILE_NAME;\n  }\n}\n\n/**\n * A helper class for LastLinkFlag\n *\n * @internal\n */\nexport class LastLinkFlagFactory {\n  /**\n   * Gets the LastLink flag and sets the current state. This state is used to compare\n   * against the last-known-good state tracked by the LastLink flag.\n   * @param rushConfiguration - the configuration of the Rush repo to get the install\n   * state from\n   *\n   * @internal\n   */\n  public static getCommonTempFlag(rushConfiguration: RushConfiguration): LastLinkFlag {\n    return new LastLinkFlag(rushConfiguration.commonTempFolder, {});\n  }\n}\n"]}