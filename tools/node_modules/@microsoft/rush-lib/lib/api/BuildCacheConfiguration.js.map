{"version":3,"file":"BuildCacheConfiguration.js","sourceRoot":"","sources":["../../src/api/BuildCacheConfiguration.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport {\n  JsonFile,\n  JsonSchema,\n  FileSystem,\n  JsonObject,\n  AlreadyReportedError,\n  ITerminal\n} from '@rushstack/node-core-library';\n\nimport { RushConfiguration } from './RushConfiguration';\nimport { FileSystemBuildCacheProvider } from '../logic/buildCache/FileSystemBuildCacheProvider';\nimport { RushConstants } from '../logic/RushConstants';\nimport { ICloudBuildCacheProvider } from '../logic/buildCache/ICloudBuildCacheProvider';\nimport { RushUserConfiguration } from './RushUserConfiguration';\nimport { EnvironmentConfiguration } from './EnvironmentConfiguration';\nimport { CacheEntryId, GetCacheEntryIdFunction } from '../logic/buildCache/CacheEntryId';\nimport type { CloudBuildCacheProviderFactory, RushSession } from '../pluginFramework/RushSession';\n\n/**\n * Describes the file structure for the \"common/config/rush/build-cache.json\" config file.\n */\nexport interface IBaseBuildCacheJson {\n  buildCacheEnabled: boolean;\n  cacheProvider: string;\n  cacheEntryNamePattern?: string;\n}\n\n/**\n * @public\n */\nexport interface ILocalBuildCacheJson extends IBaseBuildCacheJson {\n  readonly cacheProvider: 'local-only';\n}\n\n/**\n * @beta\n */\nexport interface ICloudBuildCacheJson extends IBaseBuildCacheJson {\n  readonly cacheProvider: string;\n  [otherConfigKey: string]: JsonObject;\n}\n\n/**\n * @beta\n */\nexport type IBuildCacheJson = ICloudBuildCacheJson | ILocalBuildCacheJson;\n\ninterface IBuildCacheConfigurationOptions {\n  buildCacheJson: IBuildCacheJson;\n  getCacheEntryId: GetCacheEntryIdFunction;\n  rushConfiguration: RushConfiguration;\n  rushUserConfiguration: RushUserConfiguration;\n  rushSession: RushSession;\n}\n\n/**\n * Use this class to load and save the \"common/config/rush/build-cache.json\" config file.\n * This file provides configuration options for cached project build output.\n * @beta\n */\nexport class BuildCacheConfiguration {\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\n    path.join(__dirname, '..', 'schemas', 'build-cache.schema.json')\n  );\n\n  /**\n   * Indicates whether the build cache feature is enabled.\n   * Typically it is enabled in the build-cache.json config file.\n   */\n  public readonly buildCacheEnabled: boolean;\n  /**\n   * Indicates whether or not writing to the cache is enabled.\n   */\n  public cacheWriteEnabled: boolean;\n  /**\n   * Method to calculate the cache entry id for a project, phase, and project state.\n   */\n  public readonly getCacheEntryId: GetCacheEntryIdFunction;\n  /**\n   * The provider for interacting with the local build cache.\n   */\n  public readonly localCacheProvider: FileSystemBuildCacheProvider;\n  /**\n   * The provider for interacting with the cloud build cache, if configured.\n   */\n  public readonly cloudCacheProvider: ICloudBuildCacheProvider | undefined;\n\n  private constructor(options: IBuildCacheConfigurationOptions) {\n    this.buildCacheEnabled =\n      EnvironmentConfiguration.buildCacheEnabled ?? options.buildCacheJson.buildCacheEnabled;\n    this.cacheWriteEnabled =\n      !!this.buildCacheEnabled && EnvironmentConfiguration.buildCacheWriteAllowed !== false;\n\n    this.getCacheEntryId = options.getCacheEntryId;\n    this.localCacheProvider = new FileSystemBuildCacheProvider({\n      rushUserConfiguration: options.rushUserConfiguration,\n      rushConfiguration: options.rushConfiguration\n    });\n\n    const { buildCacheJson } = options;\n    // Don't configure a cloud cache provider if local-only\n    if (buildCacheJson.cacheProvider !== 'local-only') {\n      const cloudCacheProviderFactory: CloudBuildCacheProviderFactory | undefined =\n        options.rushSession.getCloudBuildCacheProviderFactory(buildCacheJson.cacheProvider);\n      if (!cloudCacheProviderFactory) {\n        throw new Error(`Unexpected cache provider: ${buildCacheJson.cacheProvider}`);\n      }\n      this.cloudCacheProvider = cloudCacheProviderFactory(buildCacheJson as ICloudBuildCacheJson);\n    }\n  }\n\n  /**\n   * Attempts to load the build-cache.json data from the standard file path `common/config/rush/build-cache.json`.\n   * If the file has not been created yet, then undefined is returned.\n   */\n  public static async tryLoadAsync(\n    terminal: ITerminal,\n    rushConfiguration: RushConfiguration,\n    rushSession: RushSession\n  ): Promise<BuildCacheConfiguration | undefined> {\n    const jsonFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(rushConfiguration);\n    if (!FileSystem.exists(jsonFilePath)) {\n      return undefined;\n    }\n    return await BuildCacheConfiguration._loadAsync(jsonFilePath, terminal, rushConfiguration, rushSession);\n  }\n\n  /**\n   * Loads the build-cache.json data from the standard file path `common/config/rush/build-cache.json`.\n   * If the file has not been created yet, or if the feature is not enabled, then an error is reported.\n   */\n  public static async loadAndRequireEnabledAsync(\n    terminal: ITerminal,\n    rushConfiguration: RushConfiguration,\n    rushSession: RushSession\n  ): Promise<BuildCacheConfiguration> {\n    const jsonFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(rushConfiguration);\n    if (!FileSystem.exists(jsonFilePath)) {\n      terminal.writeErrorLine(\n        `The build cache feature is not enabled. This config file is missing:\\n` + jsonFilePath\n      );\n      terminal.writeLine(`\\nThe Rush website documentation has instructions for enabling the build cache.`);\n      throw new AlreadyReportedError();\n    }\n\n    const buildCacheConfiguration: BuildCacheConfiguration = await BuildCacheConfiguration._loadAsync(\n      jsonFilePath,\n      terminal,\n      rushConfiguration,\n      rushSession\n    );\n\n    if (!buildCacheConfiguration.buildCacheEnabled) {\n      terminal.writeErrorLine(\n        `The build cache feature is not enabled. You can enable it by editing this config file:\\n` +\n          jsonFilePath\n      );\n      throw new AlreadyReportedError();\n    }\n    return buildCacheConfiguration;\n  }\n\n  /**\n   * Gets the absolute path to the build-cache.json file in the specified rush workspace.\n   */\n  public static getBuildCacheConfigFilePath(rushConfiguration: RushConfiguration): string {\n    return path.resolve(rushConfiguration.commonRushConfigFolder, RushConstants.buildCacheFilename);\n  }\n\n  private static async _loadAsync(\n    jsonFilePath: string,\n    terminal: ITerminal,\n    rushConfiguration: RushConfiguration,\n    rushSession: RushSession\n  ): Promise<BuildCacheConfiguration> {\n    const buildCacheJson: IBuildCacheJson = await JsonFile.loadAndValidateAsync(\n      jsonFilePath,\n      BuildCacheConfiguration._jsonSchema\n    );\n    const rushUserConfiguration: RushUserConfiguration = await RushUserConfiguration.initializeAsync();\n\n    let getCacheEntryId: GetCacheEntryIdFunction;\n    try {\n      getCacheEntryId = CacheEntryId.parsePattern(buildCacheJson.cacheEntryNamePattern);\n    } catch (e) {\n      terminal.writeErrorLine(\n        `Error parsing cache entry name pattern \"${buildCacheJson.cacheEntryNamePattern}\": ${e}`\n      );\n      throw new AlreadyReportedError();\n    }\n\n    return new BuildCacheConfiguration({\n      buildCacheJson,\n      getCacheEntryId,\n      rushConfiguration,\n      rushUserConfiguration,\n      rushSession\n    });\n  }\n}\n"]}