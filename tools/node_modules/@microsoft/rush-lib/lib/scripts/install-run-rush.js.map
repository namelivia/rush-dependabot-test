{"version":3,"file":"install-run-rush.js","sourceRoot":"","sources":["../../src/scripts/install-run-rush.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See the @microsoft/rush package's LICENSE file for license information.\n\n// THIS FILE WAS GENERATED BY A TOOL. ANY MANUAL MODIFICATIONS WILL GET OVERWRITTEN WHENEVER RUSH IS UPGRADED.\n//\n// This script is intended for usage in an automated build environment where the Rush command may not have\n// been preinstalled, or may have an unpredictable version.  This script will automatically install the version of Rush\n// specified in the rush.json configuration file (if not already installed), and then pass a command-line to it.\n// An example usage would be:\n//\n//    node common/scripts/install-run-rush.js install\n//\n// For more information, see: https://rushjs.io/pages/maintainer/setup_new_repo/\n\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nimport {\n  installAndRun,\n  findRushJsonFolder,\n  RUSH_JSON_FILENAME,\n  runWithErrorAndStatusCode,\n  ILogger\n} from './install-run';\n\nconst PACKAGE_NAME: string = '@microsoft/rush';\nconst RUSH_PREVIEW_VERSION: string = 'RUSH_PREVIEW_VERSION';\n\nfunction _getRushVersion(logger: ILogger): string {\n  const rushPreviewVersion: string | undefined = process.env[RUSH_PREVIEW_VERSION];\n  if (rushPreviewVersion !== undefined) {\n    logger.info(`Using Rush version from environment variable ${RUSH_PREVIEW_VERSION}=${rushPreviewVersion}`);\n    return rushPreviewVersion;\n  }\n\n  const rushJsonFolder: string = findRushJsonFolder();\n  const rushJsonPath: string = path.join(rushJsonFolder, RUSH_JSON_FILENAME);\n  try {\n    const rushJsonContents: string = fs.readFileSync(rushJsonPath, 'utf-8');\n    // Use a regular expression to parse out the rushVersion value because rush.json supports comments,\n    // but JSON.parse does not and we don't want to pull in more dependencies than we need to in this script.\n    const rushJsonMatches: string[] = rushJsonContents.match(\n      /\\\"rushVersion\\\"\\s*\\:\\s*\\\"([0-9a-zA-Z.+\\-]+)\\\"/\n    )!;\n    return rushJsonMatches[1];\n  } catch (e) {\n    throw new Error(\n      `Unable to determine the required version of Rush from rush.json (${rushJsonFolder}). ` +\n        \"The 'rushVersion' field is either not assigned in rush.json or was specified \" +\n        'using an unexpected syntax.'\n    );\n  }\n}\n\nfunction _run(): void {\n  const [\n    nodePath /* Ex: /bin/node */,\n    scriptPath /* /repo/common/scripts/install-run-rush.js */,\n    ...packageBinArgs /* [build, --to, myproject] */\n  ]: string[] = process.argv;\n\n  // Detect if this script was directly invoked, or if the install-run-rushx script was invokved to select the\n  // appropriate binary inside the rush package to run\n  const scriptName: string = path.basename(scriptPath);\n  const bin: string = scriptName.toLowerCase() === 'install-run-rushx.js' ? 'rushx' : 'rush';\n  if (!nodePath || !scriptPath) {\n    throw new Error('Unexpected exception: could not detect node path or script path');\n  }\n\n  let commandFound: boolean = false;\n  let logger: ILogger = { info: console.log, error: console.error };\n\n  for (const arg of packageBinArgs) {\n    if (arg === '-q' || arg === '--quiet') {\n      // The -q/--quiet flag is supported by both `rush` and `rushx`, and will suppress\n      // any normal informational/diagnostic information printed during startup.\n      //\n      // To maintain the same user experience, the install-run* scripts pass along this\n      // flag but also use it to suppress any diagnostic information normally printed\n      // to stdout.\n      logger = {\n        info: () => {},\n        error: console.error\n      };\n    } else if (!arg.startsWith('-') || arg === '-h' || arg === '--help') {\n      // We either found something that looks like a command (i.e. - doesn't start with a \"-\"),\n      // or we found the -h/--help flag, which can be run without a command\n      commandFound = true;\n    }\n  }\n\n  if (!commandFound) {\n    console.log(`Usage: ${scriptName} <command> [args...]`);\n    if (scriptName === 'install-run-rush.js') {\n      console.log(`Example: ${scriptName} build --to myproject`);\n    } else {\n      console.log(`Example: ${scriptName} custom-command`);\n    }\n    process.exit(1);\n  }\n\n  runWithErrorAndStatusCode(logger, () => {\n    const version: string = _getRushVersion(logger);\n    logger.info(`The rush.json configuration requests Rush version ${version}`);\n\n    return installAndRun(logger, PACKAGE_NAME, version, bin, packageBinArgs);\n  });\n}\n\n_run();\n"]}